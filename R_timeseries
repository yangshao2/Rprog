#This script demonstrates a comprehensive workflow for 
#environmental data analysis in R. It includes reading and 
#plotting precipitation and temperature data, performing trend 
#analysis on NDVI data, and applying Sen's slope and changepoint 
#detection methods. The script effectively uses various packages 
#to handle spatial, raster, and time-series data.


# Loading necessary libraries for handling spatial and raster data
library(raster)
library(sf)
library(mapview)
library(tmap)

# Reading precipitation data from a CSV file
a <- read.csv('pptmonthly.csv')

# Generating a monthly date sequence from January 2001 to December 2019
d_month <- seq(as.Date("2001-01-01"), as.Date("2019-12-31"), by = "months")
# Plotting the precipitation data as a time-series
plot(d_month, a$pcp, type = 'l', xlab = 'year', ylab = 'ppt')
points(d_month, a$pcp)

# Getting PRISM temperature data and plotting time-series
library(prism)
options(prism.path = ".")
prism::get_prism_monthlys(type = "tmean", years = 2015:2015, mon = 1:12, keepZip = F)
files <- prism_archive_ls()
print(files)
# Creating a raster stack using all downloaded PRISM data
tem <- pd_stack(files)
# Plotting the first layer of the temperature raster stack
tm_shape(tem[[1]]) +
  tm_raster(style = "cont", palette = "RdYlBu")

# Reading a shapefile (a single point location) and extracting temperature values
a <- st_read('blacksburg.shp')
tm_shape(tem[[1]]) +
  tm_raster(style = "cont", palette = "RdYlBu") +
  tm_shape(a) +
  tm_symbols()

# Extracting mean temperature from the raster stack
avalue <- extract(tem, a)
plot(avalue[1,])

# Trend analysis for NDVI data over 9 years (2001-2009)
files <- list.files('.', pattern = 'ndvi*')
# Creating a raster stack from NDVI files
m <- stack(files)
# Optionally plot the first layer

# Selecting a specific pixel location and extracting NDVI values
avalue <- m[40, 60, ]
year <- 1:9
plot(year, avalue[1,])
df <- data.frame(year, ndvi = avalue[1,])
lmodel <- lm(ndvi ~ year, data = df)
lmodel$coefficients
abline(lmodel)

# Repeating the analysis for another location
a <- st_read('blacksburg.shp')
avalue <- extract(m, a)
plot(year, avalue[1,])
df <- data.frame(year, ndvi = avalue[1,])
lmodel <- lm(ndvi ~ year, data = df)
lmodel$coefficients
abline(lmodel)

# Performing Sen's slope analysis
library(trend)
sens.slope(avalue[1,], conf.level = 0.95)
library(zyp)
model <- zyp.sen(ndvi ~ year, df)
y <- model$coefficients[1] + model$coefficients[2] * year
plot(year, avalue[1,])
lines(year, y, col = 'blue')

# Change detection analysis
library(changepoint)
plot(avalue[1,])
fit_changepoint = cpt.mean(avalue[1,])
plot(fit_changepoint)
cp <- cpts(fit_changepoint)
